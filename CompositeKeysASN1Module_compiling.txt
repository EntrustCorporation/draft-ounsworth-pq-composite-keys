Composite-Keys-2023
   {iso(1) identified-organization(3) dod(6) internet(1) security(5)
       mechanisms(5) pkix(7) id-mod(0) id-mod-composite-keys(TBD)}
    

   DEFINITIONS IMPLICIT TAGS ::= BEGIN

   EXPORTS ALL;

   IMPORTS
     PUBLIC-KEY, ParamOptions, AlgorithmIdentifier{}
       FROM AlgorithmInformation-2009  -- RFC 5912 [X509ASN1]
         { iso(1) identified-organization(3) dod(6) internet(1)
           security(5) mechanisms(5) pkix(7) id-mod(0)
           id-mod-algorithmInformation-02(58) }

     SubjectPublicKeyInfo
       FROM PKIX1Explicit-2009
         { iso(1) identified-organization(3) dod(6) internet(1)
           security(5) mechanisms(5) pkix(7) id-mod(0)
           id-mod-pkix1-explicit-02(51) }

     OneAsymmetricKey
       FROM AsymmetricKeyPackageModuleV1
         { iso(1) member-body(2) us(840) rsadsi(113549) pkcs(1)
           pkcs-9(9) smime(16) modules(0)
           id-mod-asymmetricKeyPkgV1(50) } ;

   --
   -- Object Identifiers
   --

   der OBJECT IDENTIFIER ::=
     {joint-iso-itu-t asn1(1) ber-derived(2) distinguished-encoding(1)}

   -- To be replaced by IANA
   id-composite-key OBJECT IDENTIFIER ::= {
       joint-iso-itu-t(2) country(16) us(840) organization(1) entrust(114027)
       algorithm(80) composite(4) compositekey(1) }


   --  COMPOSITE-KEY-ALGORITHM
   --
   --  Describes the basic properties of a composite key algorithm
   --
   --  &id - contains the OID identifying the composite algorithm
   --  &Params - if present, contains the type for the algorithm
   --               parameters; if absent, implies no parameters
   --  &paramPresence - parameter presence requirement
   --

   COMPOSITE-KEY-ALGORITHM ::= CLASS {
       &id             OBJECT IDENTIFIER UNIQUE,
       &Params         OPTIONAL,
       &paramPresence  ParamOptions DEFAULT absent
   } WITH SYNTAX {
       IDENTIFIER &id
       [PARAMS [TYPE &Params] ARE &paramPresence ]
   }

   CompositeAlgorithmSet COMPOSITE-KEY-ALGORITHM ::= {
      CompositeAlgorithms, ...
   }

   CompositeAlgorithmIdentifier ::= AlgorithmIdentifier{COMPOSITE-KEY-ALGORITHM, {CompositeAlgorithmSet}}

   --
   -- A Composite Public Key
   --

   pk-Composite PUBLIC-KEY ::= {
       IDENTIFIER id-composite-key
       KEY CompositePublicKey
       PARAMS TYPE CompositeAlgorithmIdentifier ARE optional
       -- Private key format not in this module --
   }

   CompositePublicKey ::= SEQUENCE SIZE (2..MAX) OF SubjectPublicKeyInfo

   CompositePrivateKey ::= SEQUENCE SIZE (2..MAX) OF OneAsymmetricKey

   CompositePublicKeyOs ::= OCTET STRING (CONTAINING CompositePublicKey ENCODED BY der)

   CompositePublicKeyBs ::= BIT STRING (CONTAINING CompositePublicKey ENCODED BY der)

	

   -- The following ASN.1 object class then automatically generates the
   -- public key structure from the types defined in pk-explicitComposite.

   -- ExplicitCompositePublicKey - The data structure for a composite
   -- public key sec-composite-pub-keys and SecondPublicKeyType are needed
   -- because PUBLIC-KEY contains a set of public key types, not a single
   -- type.
   -- TODO The parameters should be optional only if they are marked
   -- optional in the PUBLIC-KEY


    ExplicitCompositePublicKey{PUBLIC-KEY:firstPublicKey, FirstPublicKeyType,
      PUBLIC-KEY:secondPublicKey, SecondPublicKeyType} ::= SEQUENCE {
        firstPublicKey SEQUENCE {
           params firstPublicKey.&Params OPTIONAL,
            publicKey FirstPublicKeyType
        },
        secondPublicKey SEQUENCE {
            params secondPublicKey.&Params OPTIONAL,
            publicKey SecondPublicKeyType
        }
     }
	 
	-- For example, to define an RSA-Dilithium3 ExplicitCompositePublicKey where the RSA
	-- Key and Dilithium Keys are OCTET STRING, the following can be defined.
    -- ExplicitCompositePublicKey(pk-RSA, OCTET STRING, pk-Dilithium3TBD, OCTET STRING)


   
   -- Dilithium3-RSA-PKCS15-SHA256
   
   id-Dilithium3-RSA-PKCS15-SHA256 OBJECT IDENTIFIER ::= {
       joint-iso-itu-t(2) country(16) us(840) organization(1) entrust(114027)
       algorithm(80) explicitcompositekey (5) signature (1) id-dilithium3-rsa-pkcs15-sha256 (1) }
	   
   
    pk-dilithium3-rsa-pkcs15-sha256 PUBLIC-KEY ::= {
       IDENTIFIER id-Dilithium3-RSA-PKCS15-SHA256
       KEY ExplicitCompositePublicKey {pk-Dilithium3TBD, OCTET STRING, pk-rsa, OCTET STRING}
       PARAMS TYPE CompositeAlgorithmIdentifier ARE optional 
	}


   -- TODO: add all the OIDs
	

   END
